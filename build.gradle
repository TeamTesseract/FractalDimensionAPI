plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
group = project.maven_group

loom {
	accessWidener "src/main/resources/tesseract.widener"
}

subprojects {
	apply plugin: 'fabric-loom'
	archivesBaseName = rootProject.archives_base_name + "-" + project.name
	group = rootProject.maven_group + "." + rootProject.archives_base_name
}

allprojects {
	sourceCompatibility = JavaVersion.VERSION_16
	targetCompatibility = JavaVersion.VERSION_16

	version = rootProject.mod_version

	configurations {
		dev
	}

	repositories {
		mavenLocal()
		maven { url = "https://dl.bintray.com/ladysnake/libs/" }
	}

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	}

	loom {
		shareCaches = true
	}

	processResources {
		inputs.property "version", project.mod_version

		filesMatching("fabric.mod.json") {
			expand "version": project.mod_version
		}
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.encoding = "UTF-8"
		it.options.release = 16
	}

	afterEvaluate {
		artifacts {
			dev file: file("${project.buildDir}/libs/$archivesBaseName-${version}-dev.jar"), type: "jar", builtBy: jar
		}
	}

	java {
		withSourcesJar()
	}

	jar {
		from("LICENSE") {
			rename { "${it}_${project.archivesBaseName}" }
		}
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				artifact(remapJar) { builtBy remapJar }
				artifact(sourcesJar) { builtBy remapSourcesJar }
			}
		}
	}

	subprojects {
		dependencies {
			implementation project(path: ":", configuration: "dev")
		}
	}
}